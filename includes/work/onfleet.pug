.work-group.js-scroll(data-color="#fff" data-expanded="false")
    header.work-group-header
      h2.work-group-name(data-name="Onfleet") <span>Onfleet</span>
      include ../icons/add-icon.pug
    .work-group-content
      .work-group-info
        .work-group-info-row
          .work-group-info-block
            h3.work-group-info-heading When
            p.work-group-info-value 2021/Current
          .work-group-info-block
            h3.work-group-info-heading Role
            p.work-group-info-value Sr. Frontend Engineer, Team Lead
        .work-group-info-row
          .work-group-info-block
            h3.work-group-info-heading Website
            p.work-group-info-value
              a(href="https://onfleet.com" target="_blank" rel="noopener") onfleet.com
          .work-group-info-block
            h3.work-group-info-heading Tech
            p.work-group-info-value React, Zustand, Angular, GitHub Actions, Tailwind
      .work-group-body
        h3.work-group-info-heading Highlights
        ul.work-group-highlights
          //-  li.work-group-highlight Improved developer experience by refactoring legacy Ruby code into <strong>Node.js</strong> and <strong>React</strong> (faster compile times locally and on pipelines)
          //-  li.work-group-highlight Achieved 100% faster load times on <a href="https://www.farmdrop.com/recipes" target="_blank" rel="noopener">"Recipes"</a> by rebuilding it as an <strong>SSR React app with <strong>TypeScript</strong>
          //-  li.work-group-highlight Architected <a href="https://farmdropui.netlify.app" target="_blank" rel="noopener">UI Component library</a> built with React and Emotion, used across multiple frontend apps
          //-  li.work-group-highlight Introduced <strong>TypeScript</strong> to the frontend web-stack
          //-  li.work-group-highlight Collaborated with backend engineers when designing REST and GraphQLs endpoints for frontend clients to consume
        p.work-group-body-copy
          | I'll fill this in when I move on from Onfleet.


